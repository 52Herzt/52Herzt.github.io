<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2024/11/11/hello-world/</url>
    <content><![CDATA[<p>欢迎来到 <a href="/">17mc.top</a>!</p>
]]></content>
      <categories>
        <category>site</category>
      </categories>
      <tags>
        <tag>intro</tag>
      </tags>
  </entry>
  <entry>
    <title>5分钟部署一个Github Pages站点!</title>
    <url>/2024/11/15/wiki-githubPages-1/</url>
    <content><![CDATA[<h2 id="1-Github-Pages"><a href="#1-Github-Pages" class="headerlink" title="1. Github Pages"></a>1. Github Pages</h2><p>GitHub Pages 是一项静态站点托管服务，它直接从 GitHub 上的仓库获取 HTML、CSS 和 JavaScript 文件，（可选）通过构建过程运行文件，然后发布网站。 可以在 <a class="link"   href="https://github.com/collections/github-pages-examples" >GitHub Pages 示例集合 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 中看到 GitHub Pages 站点的示例。</p>
<h3 id="1-1-使用限制"><a href="#1-1-使用限制" class="headerlink" title="1.1 使用限制"></a>1.1 使用限制</h3><p>若要发布用户站点，必须创建个人帐户拥有的存储库，且存储库必须是公开的，私有不允许。 若要发布组织站点，必须创建组织帐户拥有的存储库。</p>
<p>除非使用的是自定义域，否则用户和组织站点在 http(s):&#x2F;&#x2F;<username>.github.io 或 http(s):&#x2F;&#x2F;<organization>.github.io 中可用。项目站点的源文件与其项目存储在同一个仓库中。</p>
<p>同时对于源存储库的大小以及带宽也有部分限制，此处不作过多阐述。</p>
<h2 id="2-创建-Github-Pages-站点"><a href="#2-创建-Github-Pages-站点" class="headerlink" title="2. 创建 Github Pages 站点"></a>2. 创建 Github Pages 站点</h2><h3 id="2-1-创建存储库，且仓库必须为公开"><a href="#2-1-创建存储库，且仓库必须为公开" class="headerlink" title="2.1 创建存储库，且仓库必须为公开"></a>2.1 创建存储库，且仓库必须为公开</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/image/wiki/githubpages_1_1.png"
                      alt="创建存储库"
                ></p>
<h3 id="2-2-将任意静态网页资源上传至存储库"><a href="#2-2-将任意静态网页资源上传至存储库" class="headerlink" title="2.2 将任意静态网页资源上传至存储库"></a>2.2 将任意静态网页资源上传至存储库</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/image/wiki/githubpages_1_2.png"
                      alt="上传项目"
                ></p>
<h3 id="2-3-进入-Settings-点击左侧的-Pages"><a href="#2-3-进入-Settings-点击左侧的-Pages" class="headerlink" title="2.3 进入 Settings 点击左侧的 Pages"></a>2.3 进入 Settings 点击左侧的 Pages</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/image/wiki/githubpages_1_3.png"
                      alt="进入设置"
                ></p>
<h3 id="2-4-设置构建分支为项目默认分支-main-master-root-根目录并保存"><a href="#2-4-设置构建分支为项目默认分支-main-master-root-根目录并保存" class="headerlink" title="2.4 设置构建分支为项目默认分支(main || master), root 根目录并保存"></a>2.4 设置构建分支为项目默认分支(main || master), root 根目录并保存</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/image/wiki/githubpages_1_4.png"
                      alt="设置分支"
                ></p>
<h3 id="2-5-设置构建完成后，回到设置-Pages-页面可以看到多出以下提示"><a href="#2-5-设置构建完成后，回到设置-Pages-页面可以看到多出以下提示" class="headerlink" title="2.5 设置构建完成后，回到设置 Pages 页面可以看到多出以下提示"></a>2.5 设置构建完成后，回到设置 Pages 页面可以看到多出以下提示</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/image/wiki/githubpages_1_5.png"
                      alt="查看页面"
                ><br>点击右侧按钮即可查看站点页面,至此一个 Github Pages 页面便部署好了,后续更新内容只需要提交文件至存储库即可自动构建更新。更多关于 <a class="link"   href="https://docs.github.com/zh/pages" >Github Pages 使用详情 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 可以查看官方文档。</p>
]]></content>
      <categories>
        <category>wiki</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
</search>
